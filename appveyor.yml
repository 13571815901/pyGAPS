image:
- Visual Studio 2017
# We always use a 64-bit machine, but can build x86 distributions
# with the PYTHON_ARCH variable (which is used by CMD_IN_ENV).
platform:
  - x64
version: '{branch}-{build}'
build: off
cache:
  - '%LOCALAPPDATA%\pip\Cache'

# If required to fail fast
# matrix:
#     fast_finish: true

environment:
  CONDA_ROOT: 'C:\Miniconda3-x64'

  matrix:
    - PYTHON_VERSION: '3.5'

    - PYTHON_VERSION: '3.6'

    - PYTHON_VERSION: '3.7'

# initial commands
init:
  - echo %PYTHON_VERSION%

# setup stage
install:

  # install our build environment
  - CALL "%CONDA_ROOT%\\Scripts\\activate.bat"      # run activation script
  - conda init                                      # initialize
  - conda config --set always_yes yes               # always yes
  - conda config --append channels conda-forge      # add conda forge to channel list
  - conda update -q conda                           # update (quiet)
  - conda install conda-build                       # install conda-build

  # get the conda info
  - conda info -a

  # create environment
  - conda create -q -n testenv-%PYTHON_VERSION% python=%PYTHON_VERSION% -f ./conda_recipe/environment.yml
  - activate testenv-%PYTHON_VERSION%

  # Now install the module
  - 'pip install -ve .'

# actual testing performed
test_script:
  - pytest --cov --cov-report=term-missing -vv

# cleanup the environment
after_test:
  - conda deactivate

# stuff to do on fail
on_failure:

artifacts:
  - path: dist\*

### To enable remote debugging uncomment this (also, see: http://www.appveyor.com/docs/how-to/rdp-to-build-worker):
# on_finish:
#   - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
